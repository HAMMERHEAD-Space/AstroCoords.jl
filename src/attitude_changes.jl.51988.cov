        - export EP2MRP, MRP2EP
        - 
        - """
        -     EP2MRP(β::AbstractVector{<:Number})
        - 
        - Converts Euler Parameter rotation description into Modified Rodriguez Parameters.
        - 
        - # Arguments
        - - `β::AbstractVector{<:Number}`: The Euler Parameter description of a rotation.
        - 
        - # Returns
        - - `σ::AbstractVector{<:Number}`: The Modified Rodriguez Parameter description of a rotation.
        - """
      171 function EP2MRP(β::AbstractVector{<:Number})
      204     β0, β1, β2, β3 = β
        - 
        -     # Add small epsilon to avoid division by zero when β0 is close to -1
      197     denom = 1.0 + β0
        - 
      197     σ1 = β1 / denom
      197     σ2 = β2 / denom
      197     σ3 = β3 / denom
        - 
      197     σ = SVector{3}(σ1, σ2, σ3)
        - 
      178     return σ
        - end
        - 
        - """
        -     MRP2EP(σ::AbstractVector{<:Number})
        - 
        - Converts Modified Rodriguez Parameters rotation description into Euler Parameter.
        - 
        - # Arguments
        - - `σ::AbstractVector{<:Number}`: The Modified Rodriguez Parameter description of a rotation.
        - 
        - # Returns
        - - `β::AbstractVector{<:Number}`: The Euler Parameter description of a rotation.
        - """
       75 function MRP2EP(σ::AbstractVector{<:Number})
       75     σ_sq = sum(abs2.(σ))
        - 
       75     denom = 1.0 + σ_sq
        - 
       75     β0 = (1.0 - σ_sq) / denom
       75     β = (2.0 * (σ)) ./ denom
        - 
       75     return SVector{4}(β0, β[1], β[2], β[3])
        - end
