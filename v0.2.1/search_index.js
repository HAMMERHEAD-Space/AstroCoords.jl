var documenterSearchIndex = {"docs":
[{"location":"coordinates/modEq/#Modified-Equinoctial","page":"Modified Equinoctial","title":"Modified Equinoctial","text":"","category":"section"},{"location":"coordinates/modEq/","page":"Modified Equinoctial","title":"Modified Equinoctial","text":"The Modified Equinoctial Orbital Elements provide a set of parameters that describe an object's orbit without the singularities that arise in Keplerian elements (e.g., near-circular or equatorial orbits). These elements are particularly useful in numerical orbit propagation and optimization because they remain well-defined for nearly all types of orbits (with the exception of retro-grade orbits). They are an alternative to classical orbital elements, offering advantages in continuous, high-precision computations, especially when dealing with low-eccentricity orbits.","category":"page"},{"location":"coordinates/modEq/","page":"Modified Equinoctial","title":"Modified Equinoctial","text":"(Image: image) Modified Equinoctial Orbital Element Frame [1]","category":"page"},{"location":"coordinates/modEq/#Components","page":"Modified Equinoctial","title":"Components","text":"","category":"section"},{"location":"coordinates/modEq/","page":"Modified Equinoctial","title":"Modified Equinoctial","text":"Similar to the Keplerian state vector, the Modified Equinoctial state vector consists of six elements, divided into size & shape, orientation, and position within the orbit:","category":"page"},{"location":"coordinates/modEq/","page":"Modified Equinoctial","title":"Modified Equinoctial","text":"Orbital Shape and Size\nsemi-latus rectum (p): A measure of the orbit’s size, similar to the semi-major axis, but defined as p=a*(1-e^2). It ensures well-defined behavior even for highly elliptical or circular orbits.\nfirst component of eccentricity (f): First of two parameters that replace the scalar eccentricity. f=e*cos(ω + Ω) These components prevent singularities when the eccentricity is zero\nsecond component of eccentricity (g): Second of two parameters that replace the scalar eccentricity. g=e*sin(ω + Ω)\nOrbital Orientation\nfirst component of inclination (h): First of two parameters that replace the scalar inclination. h=tan(i/2)*cos(Ω) These components ensures the elements remain well-defined for equatorial orbits\nsecond component of inclination (k): Second of two parameters that replace the scalar inclination. h=tan(i/2)*sin(Ω)\nPosition within the Orbit\nlongitude of periapsis (L): This replaces true anomaly and combines information about the satellite’s position within the orbit. L=ω + Ω + f","category":"page"},{"location":"coordinates/modEq/#References","page":"Modified Equinoctial","title":"References","text":"","category":"section"},{"location":"coordinates/modEq/","page":"Modified Equinoctial","title":"Modified Equinoctial","text":"[1]: https://degenerateconic.com/modified-equinoctial-elements.html [2]: https://link.springer.com/article/10.1007/BF01227493 [3]: https://spsweb.fltops.jpl.nasa.gov/portaldataops/mpg/MPG_Docs/Source%20Docs/EquinoctalElements-modified.pdf","category":"page"},{"location":"coordinates/keplerian/#Keplerian","page":"Keplerian","title":"Keplerian","text":"","category":"section"},{"location":"coordinates/keplerian/","page":"Keplerian","title":"Keplerian","text":"The Keplerian orbital element set describes the shape, size, orientation, and position of an orbiting object using six parameters derived from classical celestial mechanics. These elements are particularly useful for characterizing two-body motion (e.g., a satellite around the Earth) and offer an intuitive understanding of the orbit’s geometry. Unlike Cartesian elements, Keplerian elements describe the orbit itself, independent of time, rather than the satellite's instantaneous position and velocity.","category":"page"},{"location":"coordinates/keplerian/","page":"Keplerian","title":"Keplerian","text":"(Image: image) Image of Keplerian Orbital Elements [1]","category":"page"},{"location":"coordinates/keplerian/#Components","page":"Keplerian","title":"Components","text":"","category":"section"},{"location":"coordinates/keplerian/","page":"Keplerian","title":"Keplerian","text":"The Keplerian state vector consists of six elements, divided into size & shape, orientation, and position within the orbit:","category":"page"},{"location":"coordinates/keplerian/","page":"Keplerian","title":"Keplerian","text":"Orbital Shape and Size\nSemi-major axis (a): The average distance between the satellite and the primary body (e.g., Earth) along the longest dimension of the elliptical orbit.\nEccentricity (e): A measure of the orbit's deviation from a perfect circle. Values range from 0 (circular orbit) to close to 1 (highly elliptical orbit).\nOrbital Orientation\nInclination (i): The angular tilt of the orbital plane relative to the equatorial plane of the central body.\nLongitude of the ascending node (Ω): The angle from a fixed reference direction (typically the vernal equinox) to the point where the satellite crosses the equatorial plane from south to north (ascending node).\nArgument of periapsis (ω): The angle between the ascending node and the point of closest approach to the central body (periapsis). It defines the orientation of the orbit within the plane.\nPosition within the Orbit\nTrue anomaly (f): The angle between the satellite's current position and the periapsis, measured from the central body at a specific moment in time.","category":"page"},{"location":"coordinates/keplerian/#References","page":"Keplerian","title":"References","text":"","category":"section"},{"location":"coordinates/keplerian/","page":"Keplerian","title":"Keplerian","text":"[1]: https://en.wikipedia.org/wiki/Orbitalelements [2]: https://downloads.rene-schwarz.com/download/M002-CartesianStateVectorstoKeplerianOrbitElements.pdf [3]: https://downloads.rene-schwarz.com/download/M001-KeplerianOrbitElementstoCartesianState_Vectors.pdf","category":"page"},{"location":"util/anomalies/#Anomalies","page":"Anomalies","title":"Anomalies","text":"","category":"section"},{"location":"util/anomalies/","page":"Anomalies","title":"Anomalies","text":"There is support in the package to switch between the various anomalies – True, Eccentric, and Mean along with a Kepler Solver based on a Netwon iterative method. These may be moved out to a separate package later to better support and experiment with various Kepler Solver methodologies. ","category":"page"},{"location":"util/anomalies/","page":"Anomalies","title":"Anomalies","text":"(Image: image) Comparison of Anomalies [1]","category":"page"},{"location":"util/anomalies/#Usage","page":"Anomalies","title":"Usage","text":"","category":"section"},{"location":"util/anomalies/","page":"Anomalies","title":"Anomalies","text":"To convert between the anomalies use a simple function call works.","category":"page"},{"location":"util/anomalies/","page":"Anomalies","title":"Anomalies","text":"M = 2π * rand()\ne = rand()\n\nE = meanAnomaly2EccentricAnomaly(M, e)","category":"page"},{"location":"util/anomalies/#References","page":"Anomalies","title":"References","text":"","category":"section"},{"location":"util/anomalies/","page":"Anomalies","title":"Anomalies","text":"[1]: https://www.bogan.ca/orbits/kepler/e_anomly.html","category":"page"},{"location":"coordinates/usm/#Unified-State-Model","page":"Unified State Model","title":"Unified State Model","text":"","category":"section"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"The Unified State Model (USM) is an alternative approach to modeling and propagating satellite orbits. It was developed to address the limitations of traditional Cartesian coordinates and Keplerian elements. USM combines quaternion-based rotational models and hodograph-based velocity models, offering increased numerical stability and improved computational efficiency, especially for complex or perturbed orbits. There are multiple variant of the USM. Beyond the quaternion based approach there is also a Modified Rodriguez Parameters appoach and an exponential mapping approach.","category":"page"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"(Image: image) Image of USM Orbital Elements [1]","category":"page"},{"location":"coordinates/usm/#USM7-Components","page":"Unified State Model","title":"USM7 Components","text":"","category":"section"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"Unified State Model Orbital Elements. 7D parameterziation of the orbit using Velocity Hodograph and Quaternions","category":"page"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"Velocity Hodograph\nVelocity Hodograph Normal Component (C): Normal Component of Velocity Hodograph to the Radial Vector Laying in the Orbital Plane\nFirst Velocity Hodograph In-Plane Component (Rf1): Hodograph 90 degrees ahead of the Eccentricity Vector Along the Intermediate Rotating Frame X-Axis\nSecond Velocity Hodograph In-Plane Component (Rf2): Hodograph 90 degrees ahead of the Eccentricity Vector Along the Intermediate Rotating Frame Y-Axis\nQuaternions\nFirst Imaginary Quaternion Component (ϵO1): First Component of Euler Vector\nSecond Imaginary Quaternion Component (ϵO2): Second Component of Euler Vector\nThird Imaginary Quaternion Component (ϵO3): Third Component of Euler Vector\nReal Quaternion Component (η0): Scalar Component of Quaternion Rotation","category":"page"},{"location":"coordinates/usm/#USM6-Components","page":"Unified State Model","title":"USM6 Components","text":"","category":"section"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"Unified State Model Orbital Elements. 6D parameterziation of the orbit using Velocity Hodograph and MRP's","category":"page"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"Velocity Hodograph\nVelocity Hodograph Normal Component (C): Normal Component of Velocity Hodograph to the Radial Vector Laying in the Orbital Plane\nFirst Velocity Hodograph In-Plane Component (Rf1): Hodograph 90 degrees ahead of the Eccentricity Vector Along the Intermediate Rotating Frame X-Axis\nSecond Velocity Hodograph In-Plane Component (Rf2): Hodograph 90 degrees ahead of the Eccentricity Vector Along the Intermediate Rotating Frame Y-Axis\nModified Rodriguez Parameters\nFirst Modified Rodriguez Parameter (σ1)\nSecond Modified Rodriguez Parameter (σ2)\nThird Modified Rodriguez Parameter (σ3)","category":"page"},{"location":"coordinates/usm/#USMEM-Components","page":"Unified State Model","title":"USMEM Components","text":"","category":"section"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"Unified State Model Orbital Elements. 6D parameterziation of the orbit using Velocity Hodograph and Exponential Mapping","category":"page"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"Velocity Hodograph\nVelocity Hodograph Normal Component (C): Normal Component of Velocity Hodograph to the Radial Vector Laying in the Orbital Plane\nFirst Velocity Hodograph In-Plane Component (Rf1): Hodograph 90 degrees ahead of the Eccentricity Vector Along the Intermediate Rotating Frame X-Axis\nSecond Velocity Hodograph In-Plane Component (Rf2): Hodograph 90 degrees ahead of the Eccentricity Vector Along the Intermediate Rotating Frame Y-Axis\nQuaternions\nFirst Exponential Mapping Component (a1)\nSecond Exponential Mapping Component (a2)\nThird Exponential Mapping Component (a3)","category":"page"},{"location":"coordinates/usm/#References","page":"Unified State Model","title":"References","text":"","category":"section"},{"location":"coordinates/usm/","page":"Unified State Model","title":"Unified State Model","text":"[1]: https://link.springer.com/article/10.1007/s10569-011-9396-5#:~:text=The%20Unified%20State%20Model%20is,a%20set%20of%20seven%20elements. [2]: Van den Broeck, Michael. \"An Approach to Generalizing Taylor Series Integration for Low-Thrust Trajectories.\" (2017).  [3]: https://link.springer.com/article/10.1007/BF01227757","category":"page"},{"location":"util/quantities/#Quantities","page":"Quantities","title":"Quantities","text":"","category":"section"},{"location":"util/quantities/","page":"Quantities","title":"Quantities","text":"This package implements a number of interfaces to get common astrodynamics quantities regardless of coordinate definition used. All of these have a common interface where the function simply takes the AstroCoords struct and a gravitational parameter.","category":"page"},{"location":"util/quantities/","page":"Quantities","title":"Quantities","text":"The quantities currently supported are:","category":"page"},{"location":"util/quantities/","page":"Quantities","title":"Quantities","text":"meanMotion\norbitalPeriod\norbitalNRG\nangularMomentumVector\nangularMomentumQuantity","category":"page"},{"location":"util/quantities/","page":"Quantities","title":"Quantities","text":"A sample function call is provided below","category":"page"},{"location":"util/quantities/","page":"Quantities","title":"Quantities","text":"state = [\n    -1076.225324679696\n    -6765.896364327722\n    -332.3087833503755\n    9.356857417032581\n    -3.3123476319597557\n    -1.1880157328553503\n]\n\nμ = 3.986004415e5\n\ncart_state = Cartesian(state)\n\nNRG = orbitalNRG(cart_state, μ)","category":"page"},{"location":"coordinates/cartesian/#Cartesian","page":"Cartesian","title":"Cartesian","text":"","category":"section"},{"location":"coordinates/cartesian/","page":"Cartesian","title":"Cartesian","text":"The Cartesian orbital element set describes the state of an orbiting object using its position and velocity vectors in a standard coordinate system, typically the Earth-Centered Inertial (ECI) frame. Unlike classical Keplerian elements, which describe the shape and orientation of an orbit, the Cartesian set provides direct information about the object's state in 3D space at a given time.","category":"page"},{"location":"coordinates/cartesian/","page":"Cartesian","title":"Cartesian","text":"(Image: image) Image of Cartesian Orbital Elements [1]","category":"page"},{"location":"coordinates/cartesian/#Components","page":"Cartesian","title":"Components","text":"","category":"section"},{"location":"coordinates/cartesian/","page":"Cartesian","title":"Cartesian","text":"The Cartesian state vector consists of six elements, divided into position and velocity components:","category":"page"},{"location":"coordinates/cartesian/","page":"Cartesian","title":"Cartesian","text":"Position Vector (r) – Describes the object’s location in 3D space relative to the origin (usually the center of the Earth):\nx: Position along the x-axis.\ny: Position along the y-axis.\nz: Position along the z-axis.\nVelocity Vector (v) – Represents the object's velocity in 3D space, indicating the direction and speed of motion:\nẋ: Velocity component along the x-axis.\nẏ: Velocity component along the y-axis.\nż: Velocity component along the z-axis.","category":"page"},{"location":"coordinates/cartesian/#References","page":"Cartesian","title":"References","text":"","category":"section"},{"location":"coordinates/cartesian/","page":"Cartesian","title":"Cartesian","text":"[1]: https://en.wikipedia.org/wiki/Cartesiancoordinatesystem","category":"page"},{"location":"coordinates/delaunay/#Delaunay","page":"Delaunay","title":"Delaunay","text":"","category":"section"},{"location":"coordinates/delaunay/","page":"Delaunay","title":"Delaunay","text":"The Delaunay Orbital Elements are an alternative formulation of classical orbital elements expressed in terms of action-angle variables. These elements are widely used in perturbation theory and celestial mechanics because they simplify the equations of motion by transforming them into canonical Hamiltonian form. This makes them particularly useful for studying long-term orbital behavior and complex gravitational interactions.","category":"page"},{"location":"coordinates/delaunay/","page":"Delaunay","title":"Delaunay","text":"(Image: image) Image of Delaunay Orbital Elements [1]","category":"page"},{"location":"coordinates/delaunay/#Components","page":"Delaunay","title":"Components","text":"","category":"section"},{"location":"coordinates/delaunay/","page":"Delaunay","title":"Delaunay","text":"The Delaunay variables are called action-angle coordinates as the Hamiltonian only depends on the action variables.","category":"page"},{"location":"coordinates/delaunay/","page":"Delaunay","title":"Delaunay","text":"Action Coordinates\nCanonical Keplerian Energy (L): Instaneous energy of the Keplerian orbit.\nCanonical Total Angular Momentum (G): Instaneous total angular momentum of the Keplerian orbit.\nCanonical Normal Angular Momentum (Relative to Equator) (H): Instaneous normal angular momentum of the Keplerian orbit.\nAngle Coordinates\nMean Anomaly (M): The angle between the satellite's current position and the periapsis, measured from the central body at a specific moment in time treated as thought the orbit was circular.\nArgument of periapsis (ω): The angle between the ascending node and the point of closest approach to the central body (periapsis). It defines the orientation of the orbit within the plane.\nLongitude of the ascending node (Ω): The angle from a fixed reference direction (typically the vernal equinox) to the point where the satellite crosses the equatorial plane from south to north (ascending node).","category":"page"},{"location":"coordinates/delaunay/#References","page":"Delaunay","title":"References","text":"","category":"section"},{"location":"coordinates/delaunay/","page":"Delaunay","title":"Delaunay","text":"[1]: Laskar, Jacques. \"Andoyer construction for Hill and Delaunay variables.\" Celestial Mechanics and Dynamical Astronomy 128.4 (2017): 475-482. [2]: https://www.researchgate.net/publication/2143998TheAveragedDynamicsoftheHydrogenAtominCrossedElectricandMagneticFieldsasaPerturbedKeplerProblem","category":"page"},{"location":"coordinates/milankovich/#Milankovich","page":"Milankovich","title":"Milankovich","text":"","category":"section"},{"location":"coordinates/milankovich/","page":"Milankovich","title":"Milankovich","text":"The Milankovitch orbital elements describe long-term variations in a planet's orbit around the Sun, primarily used to explain climate changes on Earth over tens of thousands to hundreds of thousands of years. These elements focus on how the shape, tilt, and orientation of Earth’s orbit change over time, impacting the amount and distribution of solar energy the planet receives. They are named after the Serbian scientist Milutin Milankovitch, who theorized that these variations drive cyclical climatic patterns, such as glacial and interglacial periods.","category":"page"},{"location":"coordinates/milankovich/","page":"Milankovich","title":"Milankovich","text":"(Image: image) Image of Milankovich Orbital Elements [2]","category":"page"},{"location":"coordinates/milankovich/#Components","page":"Milankovich","title":"Components","text":"","category":"section"},{"location":"coordinates/milankovich/","page":"Milankovich","title":"Milankovich","text":"The element set use the angular momentum vector and the eccentricity vector to define the orbit and uses the mean anomaly to describe where in the orbit a body is","category":"page"},{"location":"coordinates/milankovich/","page":"Milankovich","title":"Milankovich","text":"Angular Momentum Vector\nX-component of Angular Momentum Vector (hx) \nY-component of Angular Momentum Vector (hy)\nZ-component of Angular Momentum Vector (hz)\nEccentricity Vector\nX-component of Eccentricity Vector (ex)\nY-component of Eccentricity Vector (ey)\nZ-component of Eccentricity Vector (ez)\nMean Anomaly\nMean Anomaly (L): The angle between the satellite's current position and the periapsis, measured from the central body at a specific moment in time treated as thought the orbit was circular.","category":"page"},{"location":"coordinates/milankovich/#References","page":"Milankovich","title":"References","text":"","category":"section"},{"location":"coordinates/milankovich/","page":"Milankovich","title":"Milankovich","text":"[1]: https://www.researchgate.net/publication/263032883OntheMilankovitchorbitalelementsforperturbedKeplerianmotion#fullTextFileContent [2]: https://www.researchgate.net/publication/338021512UtilizingMaximumEntropySpectralAnalysisMESAtoidentifyMilankovitchcyclesinLowerMemberofMioceneZhujiangFormationinnorthslopeofBaiyunSagPearlRiverMouthBasinSouthChina_Sea","category":"page"},{"location":"coordinates/spherical/#Spherical","page":"Spherical","title":"Spherical","text":"","category":"section"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"The Spherical Orbital Elements describe the position and velocity of an orbiting object using spherical coordinates, rather than Cartesian or Keplerian forms. These elements provide an intuitive way to represent an object's state based on angles and radial distance, making them useful in certain tracking, control, and modeling contexts. They are particularly advantageous when angular relationships are more relevant than traditional orbital parameters, such as when working with ground-based observations.","category":"page"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"(Image: image) Image of Spherical Orbital Elements [1]","category":"page"},{"location":"coordinates/spherical/#Components","page":"Spherical","title":"Components","text":"","category":"section"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"Similar to the Cartesian state vector, the spherical state vector consists of six elements, divided into position and velocity components:","category":"page"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"Position Vector (r) – Describes the object’s location in 3D space relative to the origin (usually the center of the Earth):\nradial distance (r): 3D Euclidean distance from the origin\nin-plane angle (θ): in-plane angle from the positive x-axis to the radial vector\nout-of-plane angle (ϕ): out-of-plane angle from the x-y plane to the radial vector\nVelocity Vector (v) – Represents the object's velocity, indicating the direction and speed of motion, this is not a true 3D vector but the instaneous rate of change of each of the position components:\nrate of change of radius (ṙ): instantaneous rate of change of the radial vector magnitude with respect to time\nrate of change of in-plane angle (θdot): instantaneous rate of change of the in-plane angle with respect to time\nrate of change of out-of-plane angle (ϕdot): instantaneous rate of change of the out-of-plane angle with respect to time","category":"page"},{"location":"coordinates/spherical/#Cylindrical","page":"Spherical","title":"Cylindrical","text":"","category":"section"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"The Cylindrical Orbital Elements describe the state of an orbiting object using cylindrical coordinates. This set is well-suited for applications where radial distance and angular displacement are more relevant than spherical or Cartesian coordinates, such as objects in orbit around axisymmetric bodies (e.g., around a cylindrical space station or along planetary rings). These elements are useful when the symmetry of the problem aligns with a cylindrical coordinate system, making them advantageous in certain analytical models or in tracking objects relative to a central axis.","category":"page"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"(Image: image) Image of Cylindrical Orbital Elements [2]","category":"page"},{"location":"coordinates/spherical/#Components-2","page":"Spherical","title":"Components","text":"","category":"section"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"Position Vector (r) – Describes the object’s location in 3D space relative to the origin (usually the center of the Earth):\nin-plane radial distance (): 2D Euclidean distance from the origin in x-y plane\nin-plane angle (θ): in-plane angle from the positive x-axis to the radial vector\nout-of-plane distance (z): out-of-plane distance from the x-y plane\nVelocity Vector (v) – Represents the object's velocity, indicating the direction and speed of motion, this is not a true 3D vector but the instaneous rate of change of each of the position components:\nrate of change of radius (ρdot): instantaneous rate of change of the x-y radial vector magnitude with respect to time\nrate of change of in-plane angle (θdot): instantaneous rate of change of the in-plane angle with respect to time\nrate of change of out-of-plane angle (ż): instantaneous rate of change of the out-of-plane distance","category":"page"},{"location":"coordinates/spherical/#References","page":"Spherical","title":"References","text":"","category":"section"},{"location":"coordinates/spherical/","page":"Spherical","title":"Spherical","text":"[1]: https://en.wikipedia.org/wiki/Sphericalcoordinatesystem#Cylindricalcoordinates [2]: https://en.wikipedia.org/wiki/Cylindricalcoordinate_system","category":"page"},{"location":"man/usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"man/usage/","page":"Usage","title":"Usage","text":"The main way to convert between the elements is by using the AstroCoords struct. After one has been instantiated simply pass it and a gravitational parameter to a constructor of the desired element set and the package will handle the rest.","category":"page"},{"location":"man/usage/","page":"Usage","title":"Usage","text":"state = [\n    -1076.225324679696\n    -6765.896364327722\n    -332.3087833503755\n    9.356857417032581\n    -3.3123476319597557\n    -1.1880157328553503\n]\n\nμ = 3.986004415e5\n\ncart_state = Cartesian(state)\nkep_state = Keplerian(cart_state, μ)","category":"page"},{"location":"man/usage/","page":"Usage","title":"Usage","text":"While not explicitly export if the user desired to avoid the structs, simply find the appropriate conversion inside of the coordinate_changes.jl file. Note, it make take multiple conversions to get to the desired set when using this approach.","category":"page"},{"location":"man/usage/","page":"Usage","title":"Usage","text":"state = [\n    -1076.225324679696\n    -6765.896364327722\n    -332.3087833503755\n    9.356857417032581\n    -3.3123476319597557\n    -1.1880157328553503\n]\n\nμ = 3.986004415e5\n\nkep_state = AstroCoords.cart2koe(state, μ)","category":"page"},{"location":"lib/library/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"lib/library/","page":"Library","title":"Library","text":"Documentation for AstroCoords.jl.","category":"page"},{"location":"lib/library/","page":"Library","title":"Library","text":"Modules = [AstroCoords]","category":"page"},{"location":"lib/library/#AstroCoords.AstroCoordTransformation","page":"Library","title":"AstroCoords.AstroCoordTransformation","text":"abstract type AstroCoordTransformation <: AstrodynamicsTransformation\n\nAn abstract type representing a Transformation Between Astrodynamics Coordinates with no Time Regularization\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.AstrodynamicsTransformation","page":"Library","title":"AstroCoords.AstrodynamicsTransformation","text":"abstract type AstrodynamicsTransformation <: Transformation\n\nAn abstract type representing a Transformation Between Astrodynamics Coordinates\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Cartesian","page":"Library","title":"AstroCoords.Cartesian","text":"Cartesian{T} <: AstroCoord\n\nCartesian Orbital Elements. 6D parameterziation of the orbit. x - X-position y - Y-position z - Z-position ẋ - X-velocity ẏ - Y-velocity ż - Z-velocity\n\nConstructors Cartesian(x, y, z, ẋ, ẏ, ż) Cartesian(X::AbstractArray) Cartesian(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Coordinate","page":"Library","title":"AstroCoords.Coordinate","text":"abstract type AstroCoord{N, T} <: StaticMatrix{N, 1, T}\n\nAn abstract type representing a N-Dimensional Coordinate Set\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Cylindrical","page":"Library","title":"AstroCoords.Cylindrical","text":"Cylindrical{T} <: AstroCoord\n\nCylindrical Orbital Elements. 6D parameterziation of the orbit ρ - in-plane radius θ - in-plane angle z - out-of-plane distance ρdot - instantaneous rate of change of in-plsne radius θdot - instantaneous rate of change of θ ż - instantaneous rate of change of z\n\nConstructors Cylindrical(r, θ, z, ṙ, θdot, ż) Cylindrical(X::AbstractArray) Cylindrical(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Delaunay","page":"Library","title":"AstroCoords.Delaunay","text":"Delaunay{T} <: AstroCoord\n\nDelaunay Orbital Elements. 6D parameterziation of the orbit. L - Canonical Keplerian Energy G - Canonical Total Angular Momentum H - Canonical Normal Angular Momentum (Relative to Equator) M - Mean Anomaly ω - Argument of Periapsis Ω - Right Ascention of the Ascending Node\n\nConstructors Delaunay(L, G, H, M, ω, Ω) Delaunay(X::AbstractVector{<:Number}) Delaunay(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.IdentityTransformation","page":"Library","title":"AstroCoords.IdentityTransformation","text":"The IdentityTransformation is a singleton Transformation that returns the input unchanged, similar to identity.\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Keplerian","page":"Library","title":"AstroCoords.Keplerian","text":"Keplerian{T} <: AstroCoord\n\nKeplerian Orbital Elements. 6D parameterziation of the orbit. a - semi-major axis e - eccetricity  i - inclination  Ω - Right Ascension of Ascending Node  ω - Argument of Perigee f - True Anomaly\n\nConstructors Keplerian(a, e, i, Ω, ω, f) Keplerian(X::AbstractArray) Keplerian(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Milankovich","page":"Library","title":"AstroCoords.Milankovich","text":"Milankovich{T} <: AstroCoord\n\nMilankovich Orbital Elements. 7D parameterziation of the orbit. hx - X-component of Angular Momentum Vector hy - Y-component of Angular Momentum Vector hz - Z-component of Angular Momentum Vector ex - X-component of Eccentricity Vector ey - Y-component of Eccentricity Vector ez - Z-component of Eccentricity Vector L - Mean Anomaly\n\nConstructors Milankovich(hx, hy, hz, ex, ey, ez, L) Milankovich(X::AbstractArray) Milankovich(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.ModEq","page":"Library","title":"AstroCoords.ModEq","text":"ModEq{T} <: AstroCoord\n\nModified Equinoctial Orbital Elements. 6D parameterziation of the orbit. p - semi-parameter f - eccetricity projection onto longitude of perigee g - eccetricity projection onto ⟂ longitude of perigee h - projection of half inclination onto RAAN k - projection of half inclination onto ⟂ RAAN L - true longitude\n\nConstructors ModEq(p, f, g, h, k, l) ModEq(X::AbstractArray) ModEq(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Spherical","page":"Library","title":"AstroCoords.Spherical","text":"Spherical{T} <: AstroCoord\n\nSpherical Orbital Elements. 6D parameterziation of the orbit r - radius θ - in-plane angle ϕ - out-of-plane angle ṙ - instantaneous rate of change of radius θdot - instantaneous rate of change of θ ϕdot - instantaneous rate of change of ϕ\n\nConstructors Spherical(r, θ, ϕ, ṙ, ω, Ω) Spherical(X::AbstractArray) Spherical(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Transformation","page":"Library","title":"AstroCoords.Transformation","text":"The Transformation supertype defines a simple interface for performing transformations. Subtypes should be able to apply a coordinate system transformation on the correct data types by overloading the call method, and usually would have the corresponding inverse transformation defined by Base.inv(). Efficient compositions can optionally be defined by compose() (equivalently ∘).\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.USM6","page":"Library","title":"AstroCoords.USM6","text":"USM6{T} <: AstroCoord\n\nUnified State Model Orbital Elements. 6D parameterziation of the orbit using Velocity Hodograph and MRP's C - Velocity Hodograph Component Normal to the Radial Vector Laying in the Orbital Plane Rf1 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame X-Axis Rf2 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame Y-Axis σ1 - First Modified Rodriguez Parameter  σ2 - Second Modified Rodriguez Parameter  σ3 - Third Modified Rodriguez Parameter \n\nConstructors USM6(C, Rf1, Rf2, σ1, σ2, σ3) USM6(X::AbstractArray) USM6(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.USM7","page":"Library","title":"AstroCoords.USM7","text":"USM7{T} <: AstroCoord\n\nUnified State Model Orbital Elements. 7D parameterziation of the orbit using Velocity Hodograph and Quaternions C - Velocity Hodograph Component Normal to the Radial Vector Laying in the Orbital Plane Rf1 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame X-Axis Rf2 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame Y-Axis ϵO1 - First Imaginary Quaternion Component ϵO2 - Second Imaginary Quaternion Component ϵO3 - Third Imaginary Quaternion Component η0 - Real Quaternion Component\n\nConstructors USM7(C, Rf1, Rf2, ϵO1, ϵO2, ϵO3, η0) USM7(X::AbstractArray) USM7(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.USMEM","page":"Library","title":"AstroCoords.USMEM","text":"USMEM{T} <: AstroCoord\n\nUnified State Model Orbital Elements. 6D parameterziation of the orbit using Velocity Hodograph and Exponential Mapping C - Velocity Hodograph Component Normal to the Radial Vector Laying in the Orbital Plane Rf1 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame X-Axis Rf2 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame Y-Axis a1 - First Exponential Mapping Component a2 - Second Exponential Mapping Component a3 - Third Exponential Mapping Component\n\nConstructors USMEM(C, Rf1, Rf2, a1, a2, a3) USMEM(X::AbstractArray) USMEM(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.EP2MRP-Tuple{AbstractVector{<:Number}}","page":"Library","title":"AstroCoords.EP2MRP","text":"EP2MRP(β::AbstractVector{<:Number})\n\nConverts Euler Parameter rotation description into Modified Rodriguez Parameters.\n\nArguments\n\nβ::AbstractVector{<:Number}: The Euler Parameter description of a rotation.\n\nReturns\n\nσ::AbstractVector{<:Number}: The Modified Rodriguez Parameter description of a rotation.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.KeplerSolver-Union{Tuple{T}, Tuple{T, Number}} where T<:Number","page":"Library","title":"AstroCoords.KeplerSolver","text":"KeplerSolver(M::T, e::Number; tol::Float64=10 * eps(T)) where {T<:Number}\n\nSolves for true anomaly given the mean anomaly and eccentricity of an orbit.\n\nArguments\n\n-M::Number: Mean Anomaly of the orbit [radians]. -e::Number: Eccentricity of the orbit.\n\nKeyword Arguments\n\n-tol::Float64: Convergence tolerance of Kepler solver. [Default=10*eps(T)]\n\nReturns\n\n-f::Number`: True Anomaly of the orbit [radians]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.MRP2EP-Tuple{AbstractVector{<:Number}}","page":"Library","title":"AstroCoords.MRP2EP","text":"MRP2EP(σ::AbstractVector{<:Number})\n\nConverts Modified Rodriguez Parameters rotation description into Euler Parameter.\n\nArguments\n\nσ::AbstractVector{<:Number}: The Modified Rodriguez Parameter description of a rotation.\n\nReturns\n\nβ::AbstractVector{<:Number}: The Euler Parameter description of a rotation.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.Mil2cart-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.Mil2cart","text":"Mil2cart(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nConverts Milankovich state vector into the Cartesian state vector.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Milankovich state vector [H; e; L]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_cart::SVector{6, <:Number}: The Cartesian state vector [x; y; z; ẋ; ẏ; ż].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.ModEq2koe-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.ModEq2koe","text":"ModEq2koe(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nConverts Modified Equinoctial elements into the Keplerian elements.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u:AbstractVector{<:Number}: The Modified Equinoctial state vector [p; f; g; h; k; l]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_koe::SVector{6, <:Number}: The Keplerian state vector [a; e; i; Ω(RAAN); ω(AOP); ν(True Anomaly)].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM62USM7-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USM62USM7","text":"USM62USM7(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nConverts USM with Modified Rodrigue Parameters to USM with quaternions.\n\nArguments\n\n-u::AbstractVector{<:Number}: The USM6 vector [C; Rf1; Rf2; σ1; σ2; σ3]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_USM::SVector{6, <:Number}: The Unified State Model vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM72USM6-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USM72USM6","text":"USM72USM6(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nConverts USM with quaternions to USM with Modified Rodrigue Parameters.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Unified State Model vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_USM6::SVector{6, <:Number}: The USM6 State vector [C; Rf1; Rf2; σ1; σ2; σ3].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM72USMEM-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USM72USMEM","text":"USM72USMEM(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nConverts USM with quaternions to USM with exponential mapping.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Unified State Model vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_USMEM::SVector{6, <:Number}: The USMEM State Vector [C; Rf1; Rf2; a1; a2; a3, Φ].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM72koe-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.USM72koe","text":"USM72koe(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nConverts Unified State Model elements into the Keplerian orbital element set. Van den Broeck, Michael. \"An Approach to Generalizing Taylor Series Integration for Low-Thrust Trajectories.\" (2017). https://repository.tudelft.nl/islandora/object/uuid%3A2567c152-ab56-4323-bcfa-b076343664f9\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Unified State Model vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_koe:SVector{6, <:Number}: The Keplerian State vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USMEM2USM7-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USMEM2USM7","text":"USMEM2USM7(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nConverts USM with exponential mapping to USM with quaternions.\n\nArguments\n\n-u::AbstractVector{<:Number}: The USMEM vector [C; Rf1; Rf2; a1; a2; a3, Φ]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_USM::SVector{7, <:Number}: The Unified State Model vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angle_between_vectors-Union{Tuple{T2}, Tuple{T1}, Tuple{AbstractVector{T1}, AbstractVector{T2}}} where {T1<:Number, T2<:Number}","page":"Library","title":"AstroCoords.angle_between_vectors","text":"angle_between_vectors(\n    v1::AbstractVector{T1}, v2::AbstractVector{T2}\n) where {T1<:Number,T2<:Number}\n\nComputes the angle between two vectors in a more numerically stable way than dot product.\n\nArguments\n\n-v1::AbstractVector{<:Number}: The first vector of the computation -v2::AbstractVector{<:Number}: The second vector of the computation\n\nReturns\n\n-angle::Number: The angle between the two vectors\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumQuantity-Tuple{AbstractVector{<:Number}}","page":"Library","title":"AstroCoords.angularMomentumQuantity","text":"angularMomentumQuantity(u::AbstractVector{<:Number})\n\nComputes the instantaneous angular momentum.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Cartesian state vector [x; y; z; ẋ; ẏ; ż].\n\nReturns\n\n-angular_momentum::Number: Angular momentum of the body.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumQuantity-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.angularMomentumQuantity","text":"angularMomentumQuantity(X::AstroCoord, μ::Number)\n\nComputes the instantaneous angular momentum.\n\nArguments\n\n-X::AstroCoord: An coordinate set describing the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-angular_momentum::Number: Angular momentum of the body.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumVector-Tuple{AbstractVector{<:Number}}","page":"Library","title":"AstroCoords.angularMomentumVector","text":"angularMomentumVector(u::AbstractVector{<:Number})\n\nComputes the instantaneous angular momentum vector from a Cartesian state vector.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Cartesian state vector [x; y; z; ẋ; ẏ; ż].\n\nReturns\n\n-'angular_momentum::Vector{<:Number}': 3-Dimensional angular momemtum vector.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumVector-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.angularMomentumVector","text":"angularMomentumVector(X::AstroCoord, μ::Number)\n\nComputes the instantaneous angular momentum vector from a Cartesian state vector.\n\nArguments\n\n-X::AstroCoord: An coordinate set describing the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-angular_momentum::Vector{<:Number}: 3-Dimensional angular momemtum vector.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2Mil-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.cart2Mil","text":"cart2Mil(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nConverts Cartesian state vector into the Milankovich state vector.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Cartesian state vector [x; y; z; ẋ; ẏ; ż]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_Mil::SVector{7, <:Number}: The Milankovich state vector [H; e; L]. \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2cylind-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.cart2cylind","text":"cart2cylind(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nComputes the cylindrical orbital elements from a Cartesian set.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: Cartesian state vector [x; y; z; ẋ; ẏ; ż]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_cylind::SVector{6, <:Number}`: The cylindrical orbital element vector [r; θ; z; ṙ; θdot; ż].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2delaunay-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.cart2delaunay","text":"cart2delaunay(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nComputes the Delaunay orbital elements from a Cartesian set. Laskar, Jacques. \"Andoyer construction for Hill and Delaunay variables.\" Celestial Mechanics and Dynamical Astronomy 128.4 (2017): 475-482.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Cartesian orbital element vector [x; y; z; ẋ; ẏ; ż]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-'u_cart::SVector{6, <:Number}': Delaunay Orbital Element Vector [L; G; H; M; ω; Ω]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2koe-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.cart2koe","text":"function cart2koe(\n    u::AbstractVector{T}, μ::V; equatorial_tol::Float64=1E-15, circular_tol::Float64=1E-15\n) where {T<:Number,V<:Number}\n\nComputes the Keplerian orbital elements from a cartesian set.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Cartesian state vector [x; y; z; ẋ; ẏ; ż]. -μ::Number: Standard graviational parameter of central body.\n\nKeyword Arguments\n\n-equatorial_tol::Float64: The tolerance on what is considered an equatorial orbit (no inclination). [Default=1e-15] -circular_tol::Float64: The tolerance on what is considered a circular orbit (no eccentricity). [Default=1e-15]\n\nReturns\n\n-u_koe::SVector{6, <:Number}`: Keplerian orbital element vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2sphere-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.cart2sphere","text":"cart2sphere(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nComputes the spherical orbital elements from a spherical set.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Cartesian state vector [x; y; z; ẋ; ẏ; ż]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-'u_sphere::SVector{6, <:Number}': Spherical Orbital Element Vector [r; θ; ϕ; ṙ; θdot; ϕdot]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cylind2cart-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.cylind2cart","text":"cylind2cart(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nComputes the Cartesian orbital elements from a cylindrical set.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The cylindrical state vector [r; θ; z; ṙ; θdot; ż]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_cart::SVector{6, <:Number}: The Cartesian orbital element vector [x; y; z; ẋ; ẏ; ż].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.delaunay2cart-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.delaunay2cart","text":"delaunay2cart(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nComputes the Cartesian orbital elements from a Delaunay set. Laskar, Jacques. \"Andoyer construction for Hill and Delaunay variables.\" Celestial Mechanics and Dynamical Astronomy 128.4 (2017): 475-482.\n\nnote: Note\nAll angles are in radians.\n\nArgument\n\n-u::AbstractVector{<:Number}: The Delaunay orbital element vector [L; G; H; M; ω; Ω]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_cart::SVector{6, <:Number}`: The cartesian orbital element vector [x; y; z; ẋ; ẏ; ż].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.eccentricAnomaly2MeanAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.eccentricAnomaly2MeanAnomaly","text":"eccentricAnomaly2MeanAnomaly(E::Number, e::Number)\n\nConverts the true anomaly into the mean anomaly.\n\nArguments\n\n-E::Number: Eccentric anomaly of the orbit [radians]. -e::Number: Eccentricity of the orbit.\n\nReturns\n\n-'M::Number': Mean anomaly of the orbit [radians].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.eccentricAnomaly2TrueAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.eccentricAnomaly2TrueAnomaly","text":"eccentricAnomaly2TrueAnomaly(E::Number, e::Number)\n\nConverts the eccentric anomaly into the true anomaly.\n\nArguments\n\n-E::Number: Eccentric anomaly of the orbit [radians]. -e::Number: Eccentricity of the orbit.\n\nReturns\n\n-f::Number: True anomaly of the orbit [radians].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.koe2ModEq-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.koe2ModEq","text":"koe2ModEq(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nConverts Keplerian elements into the Modified Equinoctial elements.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u:AbstractVector{<:Number}: The Keplerian State vector [a; e; i; Ω(RAAN); ω(AOP); ν(True Anomaly)]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_ModEq::SVector{6, <:Number}: The Modified Equinoctial state vector [p; f; g; h; k; l].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.koe2USM7-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.koe2USM7","text":"koe2USM7(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nConverts Keplerian orbital elements into the Unified State Model set. Van den Broeck, Michael. \"An Approach to Generalizing Taylor Series Integration for Low-Thrust Trajectories.\" (2017). https://repository.tudelft.nl/islandora/object/uuid%3A2567c152-ab56-4323-bcfa-b076343664f9\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u:AbstractVector{<:Number}: The Keplerian state vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_USM::SVector{7, <:Number}: The Unified State Model vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.koe2cart-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.koe2cart","text":"koe2cart(u::AbstractVector{T}, μ::V) where {T<:Number,V<:Number}\n\nComputes the Cartesian orbital elements from a Keplerian set.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The Keplerian state vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-u_cart::Vector{6, <:Number}: The Keplerian orbital element vector [x; y; z; ẋ; ẏ; ż].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanAnomaly2EccentricAnomaly-Union{Tuple{T}, Tuple{T, Number}} where T<:Number","page":"Library","title":"AstroCoords.meanAnomaly2EccentricAnomaly","text":"meanAnomaly2EccentricAnomaly(M::T, e::Number; tol::Float64=10 * eps(T)) where {T<:Number}\n\nConverts the Mean Anomaly into the Eccentric Anomaly\n\nArguments\n\n-M::Number: Mean Anomaly of the orbit [radians] -e::Number: Eccentricity of the orbit\n\nKeyword Arguments\n\n-tol::Float64: Convergence tolerance of Kepler solver. [Default=10*eps(T)]\n\nReturns\n\n-E::Number: Eccentric Anomaly of the orbit [radians]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanAnomaly2TrueAnomaly-Union{Tuple{T}, Tuple{T, Number}} where T<:Number","page":"Library","title":"AstroCoords.meanAnomaly2TrueAnomaly","text":"meanAnomaly2TrueAnomaly(M::T, e::Number; tol::Float64=10 * eps(T)) where {T<:Number}\n\nConverts the mean anomaly into the true anomaly.\n\nArguments\n\n-M::Number: Mean anomaly of the orbit [radians]. -e::Number: Eccentricity of the orbit.\n\nKeyword Arguments\n\n-tol::Float64: Convergence tolerance of Kepler solver. [Default=10*eps(T)]\n\nReturns\n\n-f::Number: Mean anomaly of the orbit [radians].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanMotion-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.meanMotion","text":"meanMotion(X::AstroCoord, μ::Number)\n\nComputes the Keplerian mean motion about a central body.\n\nArguments\n\n-X::AstroCoord: An coordinate set describing the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\nn::Number: The orbital mean motion.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanMotion-Tuple{Number, Number}","page":"Library","title":"AstroCoords.meanMotion","text":"meanMotion(a::Number, μ::Number)\n\nComputes the Keplerian mean motion about a central body.\n\nArguments\n\n-a::Number: The semi-major axis of the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\nn::Number: The orbital mean motion.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalNRG-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.orbitalNRG","text":"orbitalNRG(X::AstroCoord, μ::Number)\n\nComputes the keplerian orbital energy.\n\nArguments\n\n-X::AstroCoord: An coordinate set describing the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-NRG::Number: The orbital energy. \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalNRG-Tuple{Number, Number}","page":"Library","title":"AstroCoords.orbitalNRG","text":"orbitalNRG(a::Number, μ::Number)\n\nComputes the keplerian orbital energy.\n\nArguments\n\n-a::Number: The semi-major axis of the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-NRG::Number: The orbital energy. \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalPeriod-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.orbitalPeriod","text":"orbitalPeriod(X::AstroCoord, μ::Number)\n\nComputes the Keplerian orbital period about a central body.\n\nArguments\n\n-X::AstroCoord: An coordinate set describing the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-T::Number: The orbital period.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalPeriod-Tuple{Number, Number}","page":"Library","title":"AstroCoords.orbitalPeriod","text":"orbitalPeriod(a::Number, μ::Number)\n\nComputes the Keplerian orbital period about a central body.\n\nArguments\n\n-a::Number: The semi-major axis of the orbit. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-T::Number: The orbital period.\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.sphere2cart-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.sphere2cart","text":"sphere2cart(u::AbstractVector{T}, μ::Number) where {T<:Number}\n\nComputes the Cartesian orbital elements from a spherical set.\n\nnote: Note\nAll angles are in radians.\n\nArguments\n\n-u::AbstractVector{<:Number}: The spherical orbital element vector [r; θ; ϕ; ṙ; θdot; ϕdot]. -μ::Number: Standard graviational parameter of central body.\n\nReturns\n\n-'u_cart::SVector{6, <:Number}': The Cartesian orbital element vector [x; y; z; ẋ; ẏ; ż].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.trueAnomaly2EccentricAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.trueAnomaly2EccentricAnomaly","text":"trueAnomaly2EccentricAnomaly(f::Number, e::Number)\n\nConverts the true anomaly into the mean anomaly.\n\nArguments\n\n-f::Number: True anomaly of the orbit [radians]. -e::Number: Eccentricity of the orbit.\n\nReturns\n\n-E::Number: Eccentric anomaly of the orbit [radians].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.trueAnomaly2MeanAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.trueAnomaly2MeanAnomaly","text":"trueAnomaly2MeanAnomaly(f::Number, e::Number)\n\nConverts the true anomaly into the mean anomaly.\n\nArguments\n\n-f::Number: True anomaly of the orbit [radians]. -e::Number: Eccentricity of the orbit.\n\nReturns\n\n-M::Number: Mean anomaly of the orbit [radians].\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#Base.inv-Tuple{AstroCoords.Transformation}","page":"Library","title":"Base.inv","text":"inv(trans::Transformation)\n\nReturns the inverse (or reverse) of the transformation trans\n\n\n\n\n\n","category":"method"},{"location":"#AstroCoords.jl","page":"Home","title":"AstroCoords.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is intended to be a one stop shop for all things related to astrodynamics coordinate systems. In addition to being non-allocating and highly performant all transformations found here are also differentiable with compatibility with a number of different automatic and finite differencing schemas.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently this package implements:","category":"page"},{"location":"","page":"Home","title":"Home","text":"[x] Cartesian\n[x] Keplerian\n[x] Delaunay\n[x] Modified Equinoctial\n[x] Spherical\n[x] Cylindrical\n[x] Unified State Model\n[x] USM7\n[x] USM6\n[x] USMEM\n[x] Milankovich\n[ ] J2 Modified Equinoctial\n[ ] EDROMO\n[ ] Kustaanheimo-Stiefel\n[ ] Stiefel-Scheifel","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package may eventually support Attitude Coordinates as well.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"AstroCoords\")","category":"page"}]
}
