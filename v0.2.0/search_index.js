var documenterSearchIndex = {"docs":
[{"location":"lib/library/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"lib/library/","page":"Library","title":"Library","text":"Documentation for AstroCoords.jl.","category":"page"},{"location":"lib/library/","page":"Library","title":"Library","text":"Modules = [AstroCoords]","category":"page"},{"location":"lib/library/#AstroCoords.AstroCoordTransformation","page":"Library","title":"AstroCoords.AstroCoordTransformation","text":"abstract type AstroCoordTransformation <: AstrodynamicsTransformation\n\nAn abstract type representing a Transformation Between Astrodynamics Coordinates with no Time Regularization\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.AstrodynamicsTransformation","page":"Library","title":"AstroCoords.AstrodynamicsTransformation","text":"abstract type AstrodynamicsTransformation <: Transformation\n\nAn abstract type representing a Transformation Between Astrodynamics Coordinates\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Cartesian","page":"Library","title":"AstroCoords.Cartesian","text":"Cartesian{T} <: AstroCoord\n\nCartesian Orbital Elements. 6D parameterziation of the orbit. x - X-position y - Y-position z - Z-position ẋ - X-velocity ẏ - Y-velocity ż - Z-velocity\n\nConstructors Cartesian(x, y, z, ẋ, ẏ, ż) Cartesian(X::AbstractArray) Cartesian(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Coordinate","page":"Library","title":"AstroCoords.Coordinate","text":"abstract type AstroCoord{N, T} <: StaticMatrix{N, 1, T}\n\nAn abstract type representing a N-Dimensional Coordinate Set\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Cylindrical","page":"Library","title":"AstroCoords.Cylindrical","text":"Cylindrical{T} <: AstroCoord\n\nCylindrical Orbital Elements. 6D parameterziation of the orbit ρ - in-plane radius θ - in-plane angle z - out-of-plane distance ρdot - instantaneous rate of change of in-plsne radius θdot - instantaneous rate of change of θ ż - instantaneous rate of change of z\n\nConstructors Cylindrical(r, θ, z, ṙ, θdot, ż) Cylindrical(X::AbstractArray) Cylindrical(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Delaunay","page":"Library","title":"AstroCoords.Delaunay","text":"Delaunay{T} <: AstroCoord\n\nDelaunay Orbital Elements. 6D parameterziation of the orbit. L - Canonical Keplerian Energy G - Canonical Total Angular Momentum H - Canonical Normal Angular Momentum (Relative to Equator) M - Mean Anomaly ω - Argument of Periapsis Ω - Right Ascention of the Ascending Node\n\nConstructors Delaunay(L, G, H, M, ω, Ω) Delaunay(X::AbstractVector{<:Number}) Delaunay(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.IdentityTransformation","page":"Library","title":"AstroCoords.IdentityTransformation","text":"The IdentityTransformation is a singleton Transformation that returns the input unchanged, similar to identity.\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Keplerian","page":"Library","title":"AstroCoords.Keplerian","text":"Keplerian{T} <: AstroCoord\n\nKeplerian Orbital Elements. 6D parameterziation of the orbit. a - semi-major axis e - eccetricity  i - inclination  Ω - Right Ascension of Ascending Node  ω - Argument of Perigee f - True Anomaly\n\nConstructors Keplerian(a, e, i, Ω, ω, f) Keplerian(X::AbstractArray) Keplerian(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Milankovich","page":"Library","title":"AstroCoords.Milankovich","text":"Milankovich{T} <: AstroCoord\n\nMilankovich Orbital Elements. 7D parameterziation of the orbit. hx - X-component of Angular Momentum Vector hy - Y-component of Angular Momentum Vector hz - Z-component of Angular Momentum Vector ex - X-component of Eccentricity Vector ey - Y-component of Eccentricity Vector ez - Z-component of Eccentricity Vector L - Mean Anomaly\n\nConstructors Milankovich(hx, hy, hz, ex, ey, ez, L) Milankovich(X::AbstractArray) Milankovich(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.ModEq","page":"Library","title":"AstroCoords.ModEq","text":"ModEq{T} <: AstroCoord\n\nModified Equinoctial Orbital Elements. 6D parameterziation of the orbit. p - semi-parameter f - eccetricity projection onto longitude of perigee g - eccetricity projection onto ⟂ longitude of perigee h - projection of half inclination onto RAAN k - projection of half inclination onto ⟂ RAAN L - true longitude\n\nConstructors ModEq(p, f, g, h, k, l) ModEq(X::AbstractArray) ModEq(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Spherical","page":"Library","title":"AstroCoords.Spherical","text":"Spherical{T} <: AstroCoord\n\nSpherical Orbital Elements. 6D parameterziation of the orbit r - radius θ - in-plane angle ϕ - out-of-plane angle ṙ - instantaneous rate of change of radius θdot - instantaneous rate of change of θ ϕdot - instantaneous rate of change of ϕ\n\nConstructors Spherical(r, θ, ϕ, ṙ, ω, Ω) Spherical(X::AbstractArray) Spherical(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.Transformation","page":"Library","title":"AstroCoords.Transformation","text":"The Transformation supertype defines a simple interface for performing transformations. Subtypes should be able to apply a coordinate system transformation on the correct data types by overloading the call method, and usually would have the corresponding inverse transformation defined by Base.inv(). Efficient compositions can optionally be defined by compose() (equivalently ∘).\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.USM6","page":"Library","title":"AstroCoords.USM6","text":"USM6{T} <: AstroCoord\n\nUnified State Model Orbital Elements. 6D parameterziation of the orbit using Velocity Hodograph and MRP's C - Velocity Hodograph Component Normal to the Radial Vector Laying in the Orbital Plane Rf1 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame X-Axis Rf2 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame Y-Axis σ1 - First Modified Rodriguez Parameter  σ2 - Second Modified Rodriguez Parameter  σ3 - Third Modified Rodriguez Parameter \n\nConstructors USM6(C, Rf1, Rf2, σ1, σ2, σ3) USM6(X::AbstractArray) USM6(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.USM7","page":"Library","title":"AstroCoords.USM7","text":"USM7{T} <: AstroCoord\n\nUnified State Model Orbital Elements. 7D parameterziation of the orbit using Velocity Hodograph and Quaternions C - Velocity Hodograph Component Normal to the Radial Vector Laying in the Orbital Plane Rf1 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame X-Axis Rf2 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame Y-Axis ϵO1 - First Imaginary Quaternion Component ϵO2 - Second Imaginary Quaternion Component ϵO3 - Third Imaginary Quaternion Component η0 - Real Quaternion Component\n\nConstructors USM7(C, Rf1, Rf2, ϵO1, ϵO2, ϵO3, η0) USM7(X::AbstractArray) USM7(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.USMEM","page":"Library","title":"AstroCoords.USMEM","text":"USMEM{T} <: AstroCoord\n\nUnified State Model Orbital Elements. 6D parameterziation of the orbit using Velocity Hodograph and Exponential Mapping C - Velocity Hodograph Component Normal to the Radial Vector Laying in the Orbital Plane Rf1 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame X-Axis Rf2 - Velocity Hodograph Component 90 degrees ahead of the Eccentricity Vector - Along the Intermediate Rotating Frame Y-Axis a1 - First Exponential Mapping Component a2 - First Exponential Mapping Component a3 - First Exponential Mapping Component\n\nConstructors USMEM(C, Rf1, Rf2, a1, a2, a3) USMEM(X::AbstractArray) USMEM(X::AstroCoord, μ::Number)\n\n\n\n\n\n","category":"type"},{"location":"lib/library/#AstroCoords.KeplerSolver-Union{Tuple{T}, Tuple{T, Number}} where T<:Number","page":"Library","title":"AstroCoords.KeplerSolver","text":"Solves for True Anomaly given the Mean Anomaly and eccentricity of an Orbit\n\nArguments: -'M::Number': Mean Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'f::Number': True Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.Mil2cart-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.Mil2cart","text":"Mil2cart(u::AbstractVector{<:Number}, μ::Number)\n\nConverts Milankovich State Vector into the Cartesian State\n\nArguments: -'u::AbstractVector{<:Number}': Milankovich State Vector [H; e; L]  -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cart::Vector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż] \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.ModEq2koe-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.ModEq2koe","text":"ModEq2koe(u::AbstractVector{<:Number}, μ::Number)\n\nConverts Modified Equinoctial Elements into the Keplerian Elements\n\nArguments: -'u:AbstractVector{<:Number}': Modified Equinoctial State Vector [p; f; g; h; k; l]  -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_koe::Vector{<:Number}': Keplerian State Vector [a; e; i; Ω(RAAN); ω(AOP); ν(True Anomaly)] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM62USM7-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USM62USM7","text":"USM62USM7(u::AbstractArray{<:Number}, μ::Number)\n\nConverts USM with Modified Rodrigue Parameters to USM with Quaternions\n\nArguments: -'u::AbstractVector{<:Number}': USM6 Vector [C; Rf1; Rf2; σ1; σ2; σ3] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_USM::Vector{Number}': Unified State Model Vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM72USM6-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USM72USM6","text":"USM72USM6(u::AbstractVector{<:Number}, μ::Number)\n\nConverts USM with Quaternions to USM with Modified Rodrigue Parameters\n\nArguments: -'u::AbstractVector{<:Number}': Unified State Model Vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_USM6::Vector{Number}': USM6 State Vector [C; Rf1; Rf2; σ1; σ2; σ3]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM72USMEM-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USM72USMEM","text":"USM72USMEM(u::AbstractVector{<:Number}, μ::Number)\n\nConverts USM with Quaternions to USM with Exponential Mapping\n\nArguments: -'u::AbstractVector{<:Number}': Unified State Model Vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_USMEM::Vector{Number}': USMEM State Vector [C; Rf1; Rf2; a1; a2; a3, Φ]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USM72koe-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.USM72koe","text":"USM72koe(u::AbstractVector{<:Number}, μ::Number)\n\nConverts Unified State Model elements into the Keplerian Orbital Element Set Van den Broeck, Michael. \"An Approach to Generalizing Taylor Series Integration for Low-Thrust Trajectories.\" (2017). https://repository.tudelft.nl/islandora/object/uuid%3A2567c152-ab56-4323-bcfa-b076343664f9\n\nArguments: -'u::AbstractVector{<:Number}': Unified State Model Vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_koe:Vector{<:Number}': Keplerian State Vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.USMEM2USM7-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.USMEM2USM7","text":"USMEM2USM7(u::AbstractVector{<:Number}, μ::Number)\n\nConverts USM with Exponential Mapping to USM with Quaternions\n\nArguments: -'u::AbstractVector{<:Number}': USMEM Vector [C; Rf1; Rf2; a1; a2; a3, Φ] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_USM::Vector{<:Number}': Unified State Model Vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumQuantity-Tuple{AbstractVector{<:Number}}","page":"Library","title":"AstroCoords.angularMomentumQuantity","text":"Computes the Instantaneous Angular Velocity Quantity\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż]\n\nReturns -'angular_momentum::Number' - Norm of Angular Momentum Vector\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumQuantity-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.angularMomentumQuantity","text":"Computes the Instantaneous Angular Velocity Quantity\n\nArguments: -'X::AstroCoord': Astro Coordinate  -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns -'angular_momentum::Number' - Norm of Angular Momentum Vector\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumVector-Tuple{AbstractVector{<:Number}}","page":"Library","title":"AstroCoords.angularMomentumVector","text":"Computes the Instantaneous Angular Velocity Vector\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż]\n\nReturns -'angular_momentum::Vector{<:Number}' - 3-Dimensional Angular Momemtum Vector\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.angularMomentumVector-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.angularMomentumVector","text":"Computes the Instantaneous Angular Velocity Vector\n\nArguments: -'X::AstroCoord': Astro Coordinate  -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns -'angular_momentum::Vector{<:Number}' - 3-Dimensional Angular Momemtum Vector\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2Mil-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.cart2Mil","text":"cart2Mil(u::AbstractVector{<:Number}, μ::Number)\n\nConverts Cartesian State Vector into the Milankovich State\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż]  -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_Mil::Vector{Number}': Milankovich State Vector [H; e; L] \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2cylind-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.cart2cylind","text":"cart2cylind(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Cylindrical Orbital Elements from a Cartesian Set\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż]   -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cylind::Vector{<:Number}': Cylindrical Orbital Element Vector [r; θ; z; ṙ; θdot; ż] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2delaunay-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.cart2delaunay","text":"cart2delaunay(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Delaunay Orbital Elements from a Cartesian Set\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian Orbital Element Vector [x; y; z; ẋ; ẏ; ż] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cart::Vector{<:Number}': Delaunay Orbital Element Vector [L; G; H; M; ω; Ω] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2koe-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.cart2koe","text":"cart2koe(u::AbstractVector{T}, μ::Number; equatorial_tol::Float64=1E-15, circular_tol::Float64=1E-15)\n\nComputes the Keplerian Orbital Elements from a Cartesian Set.\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_koe::Vector{<:Number}': Keplerian Orbital Element Vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)]  *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cart2sphere-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.cart2sphere","text":"cart2sphere(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Spherical Orbital Elements from a Spherical Set\n\nArguments: -'u::AbstractVector{<:Number}': Cartesian State Vector [x; y; z; ẋ; ẏ; ż]   -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_sphere::Vector{<:Number}': Spherical Orbital Element Vector [r; θ; ϕ; ṙ; θdot; ϕdot] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.cylind2cart-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.cylind2cart","text":"cylind2cart(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Cartesian Orbital Elements from a Cylindrical Set\n\nArguments: -'u::AbstractVector{<:Number}': Cylindrical State Vector [r; θ; z; ṙ; θdot; ż] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cart::Vector{<:Number}': Cartesian Orbital Element Vector [x; y; z; ẋ; ẏ; ż]   *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.delaunay2cart-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.delaunay2cart","text":"delaunay2cart(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Cartesian Orbital Elements from a Delaunay Set Laskar, Jacques. \"Andoyer construction for Hill and Delaunay variables.\" Celestial Mechanics and Dynamical Astronomy 128.4 (2017): 475-482.\n\nArguments: -'u::AbstractVector{<:Number}': Delaunay Orbital Element Vector [L; G; H; M; ω; Ω] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cart::Vector{<:Number}': Cartesian Orbital Element Vector [x; y; z; ẋ; ẏ; ż] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.eccentricAnomaly2MeanAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.eccentricAnomaly2MeanAnomaly","text":"Converts the True Anomaly into the Mean Anomaly\n\nArguments: -'E::Number': Eccentric Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'M::Number': Mean Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.eccentricAnomaly2TrueAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.eccentricAnomaly2TrueAnomaly","text":"Converts the Eccentric Anomaly into the True Anomaly\n\nArguments: -'E::Number': Eccentric Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'f::Number': True Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.koe2ModEq-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.koe2ModEq","text":"koe2ModEq(u::AbstractVector{<:Number}, μ::Number)\n\nConverts Keplerian Elements into the Modified Equinoctial Elements\n\nArguments: -'u:AbstractVector{<:Number}': Keplerian State Vector [a; e; i; Ω(RAAN); ω(AOP); ν(True Anomaly)] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_ModEq::Vector{<:Number}': Modified Equinoctial State Vector [p; f; g; h; k; l]  *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.koe2USM7-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.koe2USM7","text":"koe2USM7(u::AbstractVector{<:Number}, μ::Number)\n\nConverts Keplerian Orbital Elements into the Unified State Model Set Van den Broeck, Michael. \"An Approach to Generalizing Taylor Series Integration for Low-Thrust Trajectories.\" (2017). https://repository.tudelft.nl/islandora/object/uuid%3A2567c152-ab56-4323-bcfa-b076343664f9\n\nArguments: -'u:AbstractVector{<:Number}': Keplerian State Vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_USM::Vector{<:Number}': Unified State Model Vector [C; Rf1; Rf2; ϵO1; ϵO2; ϵO3; η0] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.koe2cart-Union{Tuple{V}, Tuple{T}, Tuple{AbstractVector{T}, V}} where {T<:Number, V<:Number}","page":"Library","title":"AstroCoords.koe2cart","text":"koe2cart(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Cartesian Orbital Elements from a Keplerian Set.\n\nArguments: -'u::AbstractVector{<:Number}': Keplerian State Vector [a; e; i; Ω(RAAN); ω(AOP); f(True Anomaly)]   -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cart::Vector{<:Number}': Keplerian Orbital Element Vector [x; y; z; ẋ; ẏ; ż] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanAnomaly2EccentricAnomaly-Union{Tuple{T}, Tuple{T, Number}} where T<:Number","page":"Library","title":"AstroCoords.meanAnomaly2EccentricAnomaly","text":"Converts the Mean Anomaly into the Eccentric Anomaly\n\nArguments: -'M::Number': Mean Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'E::Number': Eccentric Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanAnomaly2TrueAnomaly-Union{Tuple{T}, Tuple{T, Number}} where T<:Number","page":"Library","title":"AstroCoords.meanAnomaly2TrueAnomaly","text":"Converts the Mean Anomaly into the True Anomaly\n\nArguments: -'M::Number': Mean Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'f::Number': Mean Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanMotion-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.meanMotion","text":"Computes the Keplerian Mean Motion About a Central Body\n\nArguments:\n\n'X::AstroCoord': Astro Coordinate \n'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns:\n\n'n::Number': Orbital Mean Motion\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.meanMotion-Tuple{Number, Number}","page":"Library","title":"AstroCoords.meanMotion","text":"Computes the Keplerian Mean Motion About a Central Body\n\nArguments:\n\n'a::Number': Semi-Major Axis\n'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns:\n\n'n::Number': Orbital Mean Motion\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalNRG-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.orbitalNRG","text":"Computes the Keplerian Orbital Energy\n\nArguments: -'X::AstroCoord': Astro Coordinate  -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns -'NRG::Number' - Orbital energy \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalNRG-Tuple{Number, Number}","page":"Library","title":"AstroCoords.orbitalNRG","text":"Computes the Keplerian Orbital Energy\n\nArguments: -'a::Number': AstroCoord State Vector -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns -'NRG::Number' - Orbital energy \n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalPeriod-Tuple{AstroCoords.AstroCoord, Number}","page":"Library","title":"AstroCoords.orbitalPeriod","text":"Computes the Keplerian Orbital Period About a Central Body\n\nArguments:\n\n'X::AstroCoord': Astro Coordinate \n'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns:\n\n'T::Number': Orbital Period\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.orbitalPeriod-Tuple{Number, Number}","page":"Library","title":"AstroCoords.orbitalPeriod","text":"Computes the Keplerian Orbital Period About a Central Body\n\nArguments:\n\n'a::Number': Semi-Major Axis\n'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns:\n\n'T::Number': Orbital Period\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.sphere2cart-Union{Tuple{T}, Tuple{AbstractVector{T}, Number}} where T<:Number","page":"Library","title":"AstroCoords.sphere2cart","text":"sphere2cart(u::AbstractVector{<:Number}, μ::Number)\n\nComputes the Cartesian Orbital Elements from a Spherical Set\n\nArguments: -'u::AbstractVector{<:Number}': Spherical Orbital Element Vector [r; θ; ϕ; ṙ; θdot; ϕdot] -'μ::Number': Standard Graviational Parameter of Central Body\n\nReturns: -'u_cart::Vector{<:Number}': Cartesian Orbital Element Vector [x; y; z; ẋ; ẏ; ż] *All Angles are in Radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.trueAnomaly2EccentricAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.trueAnomaly2EccentricAnomaly","text":"Converts the True Anomaly into the Mean Anomaly\n\nArguments: -'f::Number': True Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'E::Number': Eccentric Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroCoords.trueAnomaly2MeanAnomaly-Tuple{Number, Number}","page":"Library","title":"AstroCoords.trueAnomaly2MeanAnomaly","text":"Converts the True Anomaly into the Mean Anomaly\n\nArguments: -'f::Number': True Anomaly of the orbit -'e::Number': Eccentricity of the orbit\n\nReturns -'M::Number': Mean Anomaly of the orbit *All angles are in radians\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#Base.inv-Tuple{AstroCoords.Transformation}","page":"Library","title":"Base.inv","text":"inv(trans::Transformation)\n\nReturns the inverse (or reverse) of the transformation trans\n\n\n\n\n\n","category":"method"},{"location":"man/usage/","page":"Usage","title":"Usage","text":"#TODO","category":"page"},{"location":"#AstroCoords.jl","page":"Home","title":"AstroCoords.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is intended to be a one stop shop for all things related to astrodynamics coordinate systems. In addition to being non-allocating and highly performant all transformations found here are also differentiable with compatibility with a number of different automatic and finite differencing schemas.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently this package implements:","category":"page"},{"location":"","page":"Home","title":"Home","text":"[x] Cartesian\n[x] Keplerian\n[x] Delaunay\n[x] Modified Equinoctial\n[x] Spherical\n[x] Cylindrical\n[x] Unified State Model\n[x] Milankovich\n[ ] J2 Modified Equinoctial\n[ ] EDROMO\n[ ] Kustaanheimo-Stiefel\n[ ] Stiefel-Scheifel","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package may eventually support Attitude Coordinates as well.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"AstroCoords\")","category":"page"},{"location":"man/api/","page":"API","title":"API","text":"#TODO","category":"page"}]
}
